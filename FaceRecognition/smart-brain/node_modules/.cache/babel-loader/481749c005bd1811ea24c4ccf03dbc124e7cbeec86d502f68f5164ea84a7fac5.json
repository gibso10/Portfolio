{"ast":null,"code":"var _jsxFileName = \"D:\\\\Portfolio\\\\FaceRecognition\\\\smart-brain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\n// import Particles from 'react-particles-js';\nimport ParticlesBg from 'particles-bg';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\n//You must add your own API key here from Clarifai.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'c6927f0c921044389b5fdd2843b74231'\n});\n\n// No Longer need this. Updated to particles-bg\n// const particlesOptions = {\n//   particles: {\n//     number: {\n//       value: 30,\n//       density: {\n//         enable: true,\n//         value_area: 800\n//       }\n//     }\n//   }\n// }\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n\n      // HEADS UP! Sometimes the Clarifai Models can be down or not working as they are constantly getting updated.\n      // A good way to check if the model you are using is up, is to check them on the clarifai website. For example,\n      // for the Face Detect Mode: https://www.clarifai.com/models/face-detection\n      // If that isn't working, then that means you will have to wait until their servers are back up. \n\n      app.models.predict('face-detection', this.state.input).then(response => {\n        console.log('hi', response);\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n      this.setState({\n        route: route\n      });\n    };\n    this.state = initialState;\n  }\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"cobweb\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 16\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","ParticlesBg","Clarifai","FaceRecognition","Navigation","Signin","Register","Logo","ImageLinkForm","Rank","jsxDEV","_jsxDEV","app","App","apiKey","initialState","input","imageUrl","box","route","isSignedIn","user","id","name","email","entries","joined","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","value","onButtonSubmit","state","models","predict","then","response","console","log","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","onRouteChange","render","className","children","type","bg","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/Portfolio/FaceRecognition/smart-brain/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\r\n// import Particles from 'react-particles-js';\r\nimport ParticlesBg from 'particles-bg'\r\nimport Clarifai from 'clarifai';\r\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport Signin from './components/Signin/Signin';\r\nimport Register from './components/Register/Register';\r\nimport Logo from './components/Logo/Logo';\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\r\nimport Rank from './components/Rank/Rank';\r\nimport './App.css';\r\n\r\n//You must add your own API key here from Clarifai.\r\nconst app = new Clarifai.App({\r\n apiKey: 'c6927f0c921044389b5fdd2843b74231'\r\n});\r\n\r\n// No Longer need this. Updated to particles-bg\r\n// const particlesOptions = {\r\n//   particles: {\r\n//     number: {\r\n//       value: 30,\r\n//       density: {\r\n//         enable: true,\r\n//         value_area: 800\r\n//       }\r\n//     }\r\n//   }\r\n// }\r\nconst initialState = {\r\n    input: '',\r\n    imageUrl: '',\r\n    box: {},\r\n    route: 'signin',\r\n    isSignedIn: false,\r\n    user: {\r\n      id: '',\r\n      name: '',\r\n      email: '',\r\n      entries: 0,\r\n      joined: ''\r\n    }\r\n  \r\n}\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = initialState;\r\n    \r\n  }\r\n\r\n  loadUser = (data) => {\r\n    this.setState({user: {\r\n      id: data.id,\r\n      name: data.name,\r\n      email: data.email,\r\n      entries: data.entries,\r\n      joined: data.joined\r\n    }})\r\n  }\r\n\r\n  \r\n\r\n  calculateFaceLocation = (data) => {\r\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n    const image = document.getElementById('inputimage');\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n    return {\r\n      leftCol: clarifaiFace.left_col * width,\r\n      topRow: clarifaiFace.top_row * height,\r\n      rightCol: width - (clarifaiFace.right_col * width),\r\n      bottomRow: height - (clarifaiFace.bottom_row * height)\r\n    }\r\n  }\r\n\r\n  displayFaceBox = (box) => {\r\n    this.setState({box: box});\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    this.setState({input: event.target.value});\r\n  }\r\n\r\n  onButtonSubmit = () => {\r\n    this.setState({imageUrl: this.state.input});\r\n   \r\n    // HEADS UP! Sometimes the Clarifai Models can be down or not working as they are constantly getting updated.\r\n    // A good way to check if the model you are using is up, is to check them on the clarifai website. For example,\r\n    // for the Face Detect Mode: https://www.clarifai.com/models/face-detection\r\n    // If that isn't working, then that means you will have to wait until their servers are back up. \r\n\r\n    app.models.predict('face-detection', this.state.input)\r\n      .then(response => {\r\n        console.log('hi', response)\r\n        if (response) {\r\n          fetch('http://localhost:3000/image', {\r\n            method: 'put',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n              id: this.state.user.id\r\n            })\r\n          })\r\n            .then(response => response.json())\r\n            .then(count => {\r\n              this.setState(Object.assign(this.state.user, { entries: count}))\r\n            })\r\n\r\n        }\r\n        this.displayFaceBox(this.calculateFaceLocation(response))\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  onRouteChange = (route) => {\r\n    if (route === 'signout') {\r\n      this.setState({isSignedIn: false})\r\n    } else if (route === 'home') {\r\n      this.setState({isSignedIn: true})\r\n    }\r\n    this.setState({route: route});\r\n  }\r\n\r\n  render() {\r\n    const { isSignedIn, imageUrl, route, box } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <ParticlesBg type=\"cobweb\" bg={true} />\r\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\r\n        { route === 'home'\r\n          ? <div>\r\n              <Logo />\r\n              <Rank\r\n                name={this.state.user.name}\r\n                entries={this.state.user.entries}\r\n              />\r\n              <ImageLinkForm\r\n                onInputChange={this.onInputChange}\r\n                onButtonSubmit={this.onButtonSubmit}\r\n              />\r\n              <FaceRecognition box={box} imageUrl={imageUrl} />\r\n            </div>\r\n          : (\r\n             route === 'signin'\r\n             ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\r\n             : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\r\n            )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}